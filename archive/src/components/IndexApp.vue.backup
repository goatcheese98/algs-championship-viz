<template>
  <div id="app">
    <!-- Unified ALGS Header following tournament page design -->
    <header class="algs-header">
      <div class="header-background">
        <div class="glow-orb glow-orb-1"></div>
        <div class="glow-orb glow-orb-2"></div>
        <div class="glow-orb glow-orb-3"></div>
        <div class="header-grid-pattern"></div>
      </div>
      
      <div class="header-content">
        <div class="header-top">
          <!-- Brand Section - consistent with tournament page -->
          <div class="header-branding">
            <div class="championship-logo">
              <div class="logo-icon">üèÜ</div>
            </div>
            <div class="brand-info">
              <div class="brand-subtitle">Apex Legends Global Series</div>
              <div class="championship-title">
                <h1 class="title-main">Tournament Dashboard</h1>
              </div>
            </div>
          </div>

          <!-- Platform Info Cards - using established tournament-header-card pattern -->
          <div class="header-actions">
            <div class="tournament-info-inline">
              <div class="tournament-header-card">
                <div class="info-icon-container">
                  <span class="info-icon">üìä</span>
                </div>
                <div class="info-content">
                  <div class="info-label">Platform</div>
                  <div class="info-value">Analytics Dashboard</div>
                </div>
              </div>

              <div class="tournament-header-card">
                <div class="info-icon-container">
                  <span class="info-icon">üåç</span>
                </div>
                <div class="info-content">
                  <div class="info-label">Coverage</div>
                  <div class="info-value">Global Tournaments</div>
                </div>
              </div>

              <div class="tournament-header-card">
                <div class="info-icon-container">
                  <span class="info-icon">‚ö°</span>
                </div>
                <div class="info-content">
                  <div class="info-label">Status</div>
                  <div class="info-value">Real-time Data</div>
                </div>
              </div>
            </div>
            
            <!-- Unified Data Tools Button -->
            <div class="header-nav">
              <button @click="openDataManagement" class="data-management-btn">
                <span class="btn-icon">üîß</span>
                <span class="btn-text">Data Tools</span>
              </button>
            </div>
          </div>
        </div>
      </div>
    </header>

    <!-- EWC 2025 Banner - Using established ewc-banner pattern -->
    <section class="ewc-banner">
      <div class="ewc-banner-content">
        <div class="ewc-banner-background">
          <div class="ewc-glow-orb ewc-glow-orb-1"></div>
          <div class="ewc-glow-orb ewc-glow-orb-2"></div>
          <div class="ewc-glow-orb ewc-glow-orb-3"></div>
        </div>
        
        <div class="ewc-banner-info">
          <div class="ewc-banner-logo">
            <span class="ewc-banner-icon">üèÜ</span>
          </div>
          
          <div class="ewc-banner-text">
            <h2 class="ewc-banner-title">EWC 2025 - NOW LIVE!</h2>
            <p class="ewc-banner-subtitle">Experience the Esports World Cup 2025 featuring 20 elite teams</p>
            <div class="ewc-banner-stats">
              <span class="ewc-stat">üåç Global Event</span>
              <span class="ewc-stat">üë• 20 Teams</span>
              <span class="ewc-stat">üéÆ 10 Games</span>
            </div>
          </div>
          
          <div class="ewc-banner-action">
            <router-link to="/tournament/ewc-2025" class="ewc-banner-button">
              <span class="ewc-button-text">View EWC 2025</span>
              <span class="ewc-button-arrow">‚Üí</span>
            </router-link>
          </div>
        </div>
      </div>
    </section>

    <!-- Tournament Dashboard Section - Using established patterns -->
    <main class="dashboard-container">
      <div class="dashboard-title">
        <h2>Tournament Dashboard</h2>
        <p>Explore comprehensive visualizations and analytics for ALGS tournaments worldwide</p>
      </div>

      <!-- Tournament Carousel using established carousel-container pattern -->
      <div class="carousel-container" @mouseenter="pauseAutoplay" @mouseleave="resumeAutoplay">
        <div class="carousel-wrapper">
          <div class="tournaments-carousel" ref="carousel">
            <div class="tournament-card" v-for="tournament in tournaments" :key="tournament.url" @click="goToTournament(tournament.url)">
              <div class="tournament-icon">{{ tournament.icon }}</div>
              <h3>{{ tournament.name }}</h3>
              <div class="tournament-status">Available Now</div>
              
              <p class="tournament-description">
                {{ tournament.description }}
              </p>

              <div class="tournament-details">
                <div class="detail-item" v-for="detail in tournament.details" :key="detail.label">
                  <div class="detail-label">{{ detail.label }}</div>
                  <div class="detail-value">{{ detail.value }}</div>
                </div>
              </div>

              <router-link :to="'/tournament/' + tournament.url" class="enter-button">
                {{ tournament.buttonText }}
              </router-link>
            </div>
          </div>
        </div>
        
        <div class="carousel-nav">
          <button class="carousel-btn prev" @click="prevSlide">
            <span>‚Äπ</span>
          </button>
          <div class="carousel-dots">
            <span class="dot" 
                  v-for="(card, index) in tournaments" 
                  :key="index"
                  :class="{ active: index === currentSlide }"
                  @click="goToSlide(index)"></span>
          </div>
          <button class="carousel-btn next" @click="nextSlide">
            <span>‚Ä∫</span>
          </button>
        </div>
      </div>
    </main>

    <footer>
      <p>&copy; 2025 ALGS Tournament Dashboard. Built for competitive Apex Legends visualization.</p>
    </footer>
  </div>
</template>

<script>
import { tournaments } from '@/data/tournaments/index-app-tournaments.js';

export default {
  name: 'IndexApp',
  
  data() {
    return {
      currentSlide: 0,
      tournaments: tournaments,
      autoplayInterval: null,
      isAutoplaying: true
    }
  },
  
  mounted() {
    this.initializeAnimations()
    this.initializeCarousel()
  },

  beforeUnmount() {
    clearInterval(this.autoplayInterval)
  },
  
  methods: {
    initializeAnimations() {
      if (typeof gsap !== 'undefined') {
        gsap.fromTo('.tournament-card', {
          y: 50,
          opacity: 0,
          scale: 0.9
        }, {
          y: 0,
          opacity: 1,
          scale: 1,
          duration: 0.8,
          stagger: 0.2,
          delay: 0.3,
          ease: 'back.out(1.7)'
        })
      }
    },
    
    initializeCarousel() {
      this.resumeAutoplay();
    },

    pauseAutoplay() {
      this.isAutoplaying = false;
      clearInterval(this.autoplayInterval);
    },

    resumeAutoplay() {
      this.isAutoplaying = true;
      this.autoplayInterval = setInterval(() => {
        this.nextSlide();
      }, 8000);
    },
    
    goToTournament(tournamentId) {
      this.$router.push(`/tournament/${tournamentId}`)
    },
    
    nextSlide() {
      this.currentSlide = (this.currentSlide + 1) % this.tournaments.length
      this.updateCarousel()
    },
    
    prevSlide() {
      this.currentSlide = this.currentSlide === 0 ? this.tournaments.length - 1 : this.currentSlide - 1
      this.updateCarousel()
    },
    
    goToSlide(index) {
      this.currentSlide = index
      this.updateCarousel()
    },
    
    updateCarousel() {
      const carousel = this.$refs.carousel;
      if (!carousel) return;

      if (typeof gsap !== 'undefined') {
        gsap.to(carousel, {
          xPercent: -this.currentSlide * 100,
          duration: 0.8,
          ease: 'power3.inOut'
        });
      } else {
        const translateX = -this.currentSlide * 100;
        carousel.style.transform = `translateX(${translateX}%)`;
      }
    },
    
    openDataManagement() {
      const automationServerUrl = 'http://localhost:3002'
      
      try {
        window.open(automationServerUrl, '_blank')
      } catch (error) {
        const message = `
üîß Data Management Tools

To access the data management interface:

1. Navigate to: src/data-extraction/
2. Run: npm install (if not already done)
3. Run: node automation-server.js
4. Open: http://localhost:3002

This will open the automation server GUI where you can:
‚Ä¢ Process tournament URLs
‚Ä¢ Manage concurrent processing
‚Ä¢ Rename files with day prefixes
‚Ä¢ Monitor processing results

The automation server provides full control over data extraction and file management operations.
        `
        
        alert(message)
      }
    }
  }
}
</script> 