name: Deploy ALGS Championship to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build with Vite
      run: |
        # Run the Vite build process
        npm run build
        
        # Copy additional assets to dist that Vite might not handle
        cp *.csv ./dist/ 2>/dev/null || echo "No CSV files in root, checking data directory"
        
        # Copy the public directory contents (data files, etc.)
        cp -r public/* ./dist/ 2>/dev/null || echo "No public directory to copy"
        
        # Create a proper .nojekyll file to ensure GitHub Pages serves all files
        touch ./dist/.nojekyll
        
        # Ensure proper routing - GitHub Pages should serve index.html by default
        echo "Ensuring proper routing setup..."
        
        # Verify index.html exists and is the main entry point
        if [ -f "./dist/index.html" ]; then
          echo "✅ index.html found in dist directory"
        else
          echo "❌ index.html NOT found in dist directory"
          exit 1
        fi
        
        # Create a simple redirect file for the root path (optional backup)
        echo '<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0; url=./index.html"></head><body>Redirecting...</body></html>' > ./dist/redirect.html
        
        # List contents for debugging
        echo "Build complete! Deployment directory contents:"
        find ./dist -type f | head -20
        echo "Total files in dist:"
        find ./dist -type f | wc -l
        
        # Check if chart-related files are present
        echo "Checking for chart-related files:"
        find ./dist -name "*chart*" -o -name "*Chart*" | head -10
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 